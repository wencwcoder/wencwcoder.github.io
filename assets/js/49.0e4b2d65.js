(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{468:function(e,_,o){"use strict";o.r(_);var v=o(1),c=Object(v.a)({},(function(){var e=this,_=e._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h2",{attrs:{id:"_1-url-和-uri、urn-的区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-url-和-uri、urn-的区别"}},[e._v("#")]),e._v(" 1. URL 和 URI、URN 的区别")]),e._v(" "),_("ul",[_("li",[_("strong",[e._v("URI")]),e._v("：Uniform Resource Identifier -- "),_("strong",[e._v("统一资源标识符")]),e._v("。")]),e._v(" "),_("li",[_("strong",[e._v("URL")]),e._v("：Uniform Resource Locator -- "),_("strong",[e._v("统一资源定位符")]),e._v("。")]),e._v(" "),_("li",[_("strong",[e._v("URN")]),e._v("：Uniform Resource Name -- "),_("strong",[e._v("统一资源名称")]),e._v("。")]),e._v(" "),_("li",[e._v("URL（指定位置的 URI） 和 URN（指定名称的 URI） 都是 URI（同时指定名称和位置的 URI） 的子集。")])]),e._v(" "),_("h2",{attrs:{id:"_2-介绍"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-介绍"}},[e._v("#")]),e._v(" 2. 介绍")]),e._v(" "),_("p",[e._v("统一资源标识符，或叫做 "),_("code",[e._v("URI")]),e._v("， 是用来标识互联网上的资源（例如，网页或支付）和怎样访问这些资源的传输协议（例如，"),_("code",[e._v("HTTP")]),e._v(" 和 "),_("code",[e._v("FTP")]),e._v("）的字符串。除了 "),_("code",[e._v("encodeURI")]),e._v("、"),_("code",[e._v("encodeURIComponent")]),e._v("、"),_("code",[e._v("decodeURI")]),e._v("、"),_("code",[e._v("decodeURIComponent")]),e._v(" 四个字来编码和解码 "),_("code",[e._v("URI")]),e._v(" 的函数之外 "),_("code",[e._v("ECMAScript")]),e._v(" 语言自身不提供任何使用 "),_("code",[e._v("URL")]),e._v(" 的支持。")]),e._v(" "),_("h2",{attrs:{id:"_3-有何不同"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-有何不同"}},[e._v("#")]),e._v(" 3. 有何不同")]),e._v(" "),_("ul",[_("li",[_("p",[_("code",[e._v("encodeURI")]),e._v("、"),_("code",[e._v("encodeURIComponent")]),e._v("：用来编码。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("decodeURI")]),e._v("、"),_("code",[e._v("decodeURIComponent")]),e._v("：用来解码。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("encodeURI")]),e._v(" 和 "),_("code",[e._v("decodeURI")]),e._v(" 函数操作的是完整的 URI，这俩函数假定 URI 中的任何保留字符都有特殊意义，所有不会编码它们。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("encodeURIComponent")]),e._v(" 和 "),_("code",[e._v("decodeURIComponent")]),e._v(" 函数操作的是组成 URI 的个别组件，这俩函数假定任何保留字符都代表普通文本，所以必须编码它们，所以它们（保留字符）出现在一个完整 URI 的组件里面时不会被解释成保留字符了。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("encodeURI")]),e._v(" 和 "),_("code",[e._v("encodeURIComponent")]),e._v("：唯一区别就是编码的字符范围，其中 "),_("code",[e._v("encodeURI")]),e._v(" 方法不会对下列字符编码 -- ASCII字母，数字，~!@#$&()=:/,;?+' ，"),_("code",[e._v("encodeURIComponent")]),e._v(" 方法不会对下列字符编码 -- ASCII字母，数字，~!()'，所以 "),_("code",[e._v("encodeURIComponent")]),e._v(" 比 "),_("code",[e._v("encodeURI")]),e._v(" 编码的范围更大。实际例子来说："),_("code",[e._v("encodeURIComponent")]),e._v(" 会把 http:// 编码成 http%3A%2F%2F，而 "),_("code",[e._v("encodeURI")]),e._v(" 却不会。")])])]),e._v(" "),_("h2",{attrs:{id:"_4-举例"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-举例"}},[e._v("#")]),e._v(" 4. 举例")]),e._v(" "),_("ul",[_("li",[e._v("如果你需要编码整个 URL，然后需要使用这个URL，那么用 "),_("code",[e._v("encodeURI")]),e._v("。")]),e._v(" "),_("li",[e._v("当你需要编码 URL 中的参数的时候，那么 "),_("code",[e._v("encodeURIComponent")]),e._v(" 是最好方法。")])])])}),[],!1,null,null,null);_.default=c.exports}}]);